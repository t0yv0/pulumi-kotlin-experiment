// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class DataFlowResponse {
    /**
     * @return List of destinations for this data flow.
     * 
     */
    private @Nullable List<String> destinations;
    /**
     * @return List of streams for this data flow.
     * 
     */
    private @Nullable List<String> streams;

    private DataFlowResponse() {}
    /**
     * @return List of destinations for this data flow.
     * 
     */
    public List<String> destinations() {
        return this.destinations == null ? List.of() : this.destinations;
    }
    /**
     * @return List of streams for this data flow.
     * 
     */
    public List<String> streams() {
        return this.streams == null ? List.of() : this.streams;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataFlowResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> destinations;
        private @Nullable List<String> streams;
        public Builder() {}
        public Builder(DataFlowResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinations = defaults.destinations;
    	      this.streams = defaults.streams;
        }

        @CustomType.Setter
        public Builder destinations(@Nullable List<String> destinations) {
            this.destinations = destinations;
            return this;
        }
        public Builder destinations(String... destinations) {
            return destinations(List.of(destinations));
        }
        @CustomType.Setter
        public Builder streams(@Nullable List<String> streams) {
            this.streams = streams;
            return this;
        }
        public Builder streams(String... streams) {
            return streams(List.of(streams));
        }
        public DataFlowResponse build() {
            final var o = new DataFlowResponse();
            o.destinations = destinations;
            o.streams = streams;
            return o;
        }
    }
}
