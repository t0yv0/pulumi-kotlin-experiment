// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.outputs;

import com.pulumi.azurenative.insights.outputs.DataSourceConfigurationResponse;
import com.pulumi.azurenative.insights.outputs.SinkConfigurationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class DataSourceResponse {
    private DataSourceConfigurationResponse configuration;
    /**
     * @return Datasource kind
     * 
     */
    private String kind;
    private List<SinkConfigurationResponse> sinks;

    private DataSourceResponse() {}
    public DataSourceConfigurationResponse configuration() {
        return this.configuration;
    }
    /**
     * @return Datasource kind
     * 
     */
    public String kind() {
        return this.kind;
    }
    public List<SinkConfigurationResponse> sinks() {
        return this.sinks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private DataSourceConfigurationResponse configuration;
        private String kind;
        private List<SinkConfigurationResponse> sinks;
        public Builder() {}
        public Builder(DataSourceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configuration = defaults.configuration;
    	      this.kind = defaults.kind;
    	      this.sinks = defaults.sinks;
        }

        @CustomType.Setter
        public Builder configuration(DataSourceConfigurationResponse configuration) {
            this.configuration = Objects.requireNonNull(configuration);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder sinks(List<SinkConfigurationResponse> sinks) {
            this.sinks = Objects.requireNonNull(sinks);
            return this;
        }
        public Builder sinks(SinkConfigurationResponse... sinks) {
            return sinks(List.of(sinks));
        }
        public DataSourceResponse build() {
            final var o = new DataSourceResponse();
            o.configuration = configuration;
            o.kind = kind;
            o.sinks = sinks;
            return o;
        }
    }
}
