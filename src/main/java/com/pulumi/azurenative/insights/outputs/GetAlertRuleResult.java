// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.insights.outputs;

import com.pulumi.azurenative.insights.outputs.LocationThresholdRuleConditionResponse;
import com.pulumi.azurenative.insights.outputs.ManagementEventRuleConditionResponse;
import com.pulumi.azurenative.insights.outputs.RuleEmailActionResponse;
import com.pulumi.azurenative.insights.outputs.RuleWebhookActionResponse;
import com.pulumi.azurenative.insights.outputs.ThresholdRuleConditionResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAlertRuleResult {
    /**
     * @return action that is performed when the alert rule becomes active, and when an alert condition is resolved.
     * 
     */
    private @Nullable Either<RuleEmailActionResponse,RuleWebhookActionResponse> action;
    /**
     * @return the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.
     * 
     */
    private @Nullable List<Either<RuleEmailActionResponse,RuleWebhookActionResponse>> actions;
    /**
     * @return the condition that results in the alert rule being activated.
     * 
     */
    private Object condition;
    /**
     * @return the description of the alert rule that will be included in the alert email.
     * 
     */
    private @Nullable String description;
    /**
     * @return Azure resource Id
     * 
     */
    private String id;
    /**
     * @return the flag that indicates whether the alert rule is enabled.
     * 
     */
    private Boolean isEnabled;
    /**
     * @return Last time the rule was updated in ISO8601 format.
     * 
     */
    private String lastUpdatedTime;
    /**
     * @return Resource location
     * 
     */
    private String location;
    /**
     * @return Azure resource name
     * 
     */
    private String name;
    /**
     * @return the provisioning state.
     * 
     */
    private @Nullable String provisioningState;
    /**
     * @return Resource tags
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Azure resource type
     * 
     */
    private String type;

    private GetAlertRuleResult() {}
    /**
     * @return action that is performed when the alert rule becomes active, and when an alert condition is resolved.
     * 
     */
    public Optional<Either<RuleEmailActionResponse,RuleWebhookActionResponse>> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.
     * 
     */
    public List<Either<RuleEmailActionResponse,RuleWebhookActionResponse>> actions() {
        return this.actions == null ? List.of() : this.actions;
    }
    /**
     * @return the condition that results in the alert rule being activated.
     * 
     */
    public Object condition() {
        return this.condition;
    }
    /**
     * @return the description of the alert rule that will be included in the alert email.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Azure resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return the flag that indicates whether the alert rule is enabled.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return Last time the rule was updated in ISO8601 format.
     * 
     */
    public String lastUpdatedTime() {
        return this.lastUpdatedTime;
    }
    /**
     * @return Resource location
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Azure resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return the provisioning state.
     * 
     */
    public Optional<String> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }
    /**
     * @return Resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Azure resource type
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Either<RuleEmailActionResponse,RuleWebhookActionResponse> action;
        private @Nullable List<Either<RuleEmailActionResponse,RuleWebhookActionResponse>> actions;
        private Object condition;
        private @Nullable String description;
        private String id;
        private Boolean isEnabled;
        private String lastUpdatedTime;
        private String location;
        private String name;
        private @Nullable String provisioningState;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetAlertRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.actions = defaults.actions;
    	      this.condition = defaults.condition;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.isEnabled = defaults.isEnabled;
    	      this.lastUpdatedTime = defaults.lastUpdatedTime;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder action(@Nullable Either<RuleEmailActionResponse,RuleWebhookActionResponse> action) {
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder actions(@Nullable List<Either<RuleEmailActionResponse,RuleWebhookActionResponse>> actions) {
            this.actions = actions;
            return this;
        }
        public Builder actions(Either<RuleEmailActionResponse,RuleWebhookActionResponse>... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder condition(Object condition) {
            this.condition = Objects.requireNonNull(condition);
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedTime(String lastUpdatedTime) {
            this.lastUpdatedTime = Objects.requireNonNull(lastUpdatedTime);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(@Nullable String provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetAlertRuleResult build() {
            final var o = new GetAlertRuleResult();
            o.action = action;
            o.actions = actions;
            o.condition = condition;
            o.description = description;
            o.id = id;
            o.isEnabled = isEnabled;
            o.lastUpdatedTime = lastUpdatedTime;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
