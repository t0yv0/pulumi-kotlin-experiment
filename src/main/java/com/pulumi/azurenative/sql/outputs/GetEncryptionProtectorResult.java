// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEncryptionProtectorResult {
    /**
     * @return Key auto rotation opt-in flag. Either true or false.
     * 
     */
    private @Nullable Boolean autoRotationEnabled;
    /**
     * @return Resource ID.
     * 
     */
    private String id;
    /**
     * @return Kind of encryption protector. This is metadata used for the Azure portal experience.
     * 
     */
    private String kind;
    /**
     * @return Resource location.
     * 
     */
    private String location;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return The name of the server key.
     * 
     */
    private @Nullable String serverKeyName;
    /**
     * @return The encryption protector type like &#39;ServiceManaged&#39;, &#39;AzureKeyVault&#39;.
     * 
     */
    private String serverKeyType;
    /**
     * @return Subregion of the encryption protector.
     * 
     */
    private String subregion;
    /**
     * @return Thumbprint of the server key.
     * 
     */
    private String thumbprint;
    /**
     * @return Resource type.
     * 
     */
    private String type;
    /**
     * @return The URI of the server key.
     * 
     */
    private String uri;

    private GetEncryptionProtectorResult() {}
    /**
     * @return Key auto rotation opt-in flag. Either true or false.
     * 
     */
    public Optional<Boolean> autoRotationEnabled() {
        return Optional.ofNullable(this.autoRotationEnabled);
    }
    /**
     * @return Resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Kind of encryption protector. This is metadata used for the Azure portal experience.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return Resource location.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The name of the server key.
     * 
     */
    public Optional<String> serverKeyName() {
        return Optional.ofNullable(this.serverKeyName);
    }
    /**
     * @return The encryption protector type like &#39;ServiceManaged&#39;, &#39;AzureKeyVault&#39;.
     * 
     */
    public String serverKeyType() {
        return this.serverKeyType;
    }
    /**
     * @return Subregion of the encryption protector.
     * 
     */
    public String subregion() {
        return this.subregion;
    }
    /**
     * @return Thumbprint of the server key.
     * 
     */
    public String thumbprint() {
        return this.thumbprint;
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The URI of the server key.
     * 
     */
    public String uri() {
        return this.uri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEncryptionProtectorResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean autoRotationEnabled;
        private String id;
        private String kind;
        private String location;
        private String name;
        private @Nullable String serverKeyName;
        private String serverKeyType;
        private String subregion;
        private String thumbprint;
        private String type;
        private String uri;
        public Builder() {}
        public Builder(GetEncryptionProtectorResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRotationEnabled = defaults.autoRotationEnabled;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.serverKeyName = defaults.serverKeyName;
    	      this.serverKeyType = defaults.serverKeyType;
    	      this.subregion = defaults.subregion;
    	      this.thumbprint = defaults.thumbprint;
    	      this.type = defaults.type;
    	      this.uri = defaults.uri;
        }

        @CustomType.Setter
        public Builder autoRotationEnabled(@Nullable Boolean autoRotationEnabled) {
            this.autoRotationEnabled = autoRotationEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder serverKeyName(@Nullable String serverKeyName) {
            this.serverKeyName = serverKeyName;
            return this;
        }
        @CustomType.Setter
        public Builder serverKeyType(String serverKeyType) {
            this.serverKeyType = Objects.requireNonNull(serverKeyType);
            return this;
        }
        @CustomType.Setter
        public Builder subregion(String subregion) {
            this.subregion = Objects.requireNonNull(subregion);
            return this;
        }
        @CustomType.Setter
        public Builder thumbprint(String thumbprint) {
            this.thumbprint = Objects.requireNonNull(thumbprint);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder uri(String uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }
        public GetEncryptionProtectorResult build() {
            final var o = new GetEncryptionProtectorResult();
            o.autoRotationEnabled = autoRotationEnabled;
            o.id = id;
            o.kind = kind;
            o.location = location;
            o.name = name;
            o.serverKeyName = serverKeyName;
            o.serverKeyType = serverKeyType;
            o.subregion = subregion;
            o.thumbprint = thumbprint;
            o.type = type;
            o.uri = uri;
            return o;
        }
    }
}
