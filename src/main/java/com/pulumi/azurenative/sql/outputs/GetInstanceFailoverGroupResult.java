// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql.outputs;

import com.pulumi.azurenative.sql.outputs.InstanceFailoverGroupReadOnlyEndpointResponse;
import com.pulumi.azurenative.sql.outputs.InstanceFailoverGroupReadWriteEndpointResponse;
import com.pulumi.azurenative.sql.outputs.ManagedInstancePairInfoResponse;
import com.pulumi.azurenative.sql.outputs.PartnerRegionInfoResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstanceFailoverGroupResult {
    /**
     * @return Resource ID.
     * 
     */
    private String id;
    /**
     * @return List of managed instance pairs in the failover group.
     * 
     */
    private List<ManagedInstancePairInfoResponse> managedInstancePairs;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return Partner region information for the failover group.
     * 
     */
    private List<PartnerRegionInfoResponse> partnerRegions;
    /**
     * @return Read-only endpoint of the failover group instance.
     * 
     */
    private @Nullable InstanceFailoverGroupReadOnlyEndpointResponse readOnlyEndpoint;
    /**
     * @return Read-write endpoint of the failover group instance.
     * 
     */
    private InstanceFailoverGroupReadWriteEndpointResponse readWriteEndpoint;
    /**
     * @return Local replication role of the failover group instance.
     * 
     */
    private String replicationRole;
    /**
     * @return Replication state of the failover group instance.
     * 
     */
    private String replicationState;
    /**
     * @return Resource type.
     * 
     */
    private String type;

    private GetInstanceFailoverGroupResult() {}
    /**
     * @return Resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of managed instance pairs in the failover group.
     * 
     */
    public List<ManagedInstancePairInfoResponse> managedInstancePairs() {
        return this.managedInstancePairs;
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Partner region information for the failover group.
     * 
     */
    public List<PartnerRegionInfoResponse> partnerRegions() {
        return this.partnerRegions;
    }
    /**
     * @return Read-only endpoint of the failover group instance.
     * 
     */
    public Optional<InstanceFailoverGroupReadOnlyEndpointResponse> readOnlyEndpoint() {
        return Optional.ofNullable(this.readOnlyEndpoint);
    }
    /**
     * @return Read-write endpoint of the failover group instance.
     * 
     */
    public InstanceFailoverGroupReadWriteEndpointResponse readWriteEndpoint() {
        return this.readWriteEndpoint;
    }
    /**
     * @return Local replication role of the failover group instance.
     * 
     */
    public String replicationRole() {
        return this.replicationRole;
    }
    /**
     * @return Replication state of the failover group instance.
     * 
     */
    public String replicationState() {
        return this.replicationState;
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceFailoverGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<ManagedInstancePairInfoResponse> managedInstancePairs;
        private String name;
        private List<PartnerRegionInfoResponse> partnerRegions;
        private @Nullable InstanceFailoverGroupReadOnlyEndpointResponse readOnlyEndpoint;
        private InstanceFailoverGroupReadWriteEndpointResponse readWriteEndpoint;
        private String replicationRole;
        private String replicationState;
        private String type;
        public Builder() {}
        public Builder(GetInstanceFailoverGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.managedInstancePairs = defaults.managedInstancePairs;
    	      this.name = defaults.name;
    	      this.partnerRegions = defaults.partnerRegions;
    	      this.readOnlyEndpoint = defaults.readOnlyEndpoint;
    	      this.readWriteEndpoint = defaults.readWriteEndpoint;
    	      this.replicationRole = defaults.replicationRole;
    	      this.replicationState = defaults.replicationState;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder managedInstancePairs(List<ManagedInstancePairInfoResponse> managedInstancePairs) {
            this.managedInstancePairs = Objects.requireNonNull(managedInstancePairs);
            return this;
        }
        public Builder managedInstancePairs(ManagedInstancePairInfoResponse... managedInstancePairs) {
            return managedInstancePairs(List.of(managedInstancePairs));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder partnerRegions(List<PartnerRegionInfoResponse> partnerRegions) {
            this.partnerRegions = Objects.requireNonNull(partnerRegions);
            return this;
        }
        public Builder partnerRegions(PartnerRegionInfoResponse... partnerRegions) {
            return partnerRegions(List.of(partnerRegions));
        }
        @CustomType.Setter
        public Builder readOnlyEndpoint(@Nullable InstanceFailoverGroupReadOnlyEndpointResponse readOnlyEndpoint) {
            this.readOnlyEndpoint = readOnlyEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder readWriteEndpoint(InstanceFailoverGroupReadWriteEndpointResponse readWriteEndpoint) {
            this.readWriteEndpoint = Objects.requireNonNull(readWriteEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder replicationRole(String replicationRole) {
            this.replicationRole = Objects.requireNonNull(replicationRole);
            return this;
        }
        @CustomType.Setter
        public Builder replicationState(String replicationState) {
            this.replicationState = Objects.requireNonNull(replicationState);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetInstanceFailoverGroupResult build() {
            final var o = new GetInstanceFailoverGroupResult();
            o.id = id;
            o.managedInstancePairs = managedInstancePairs;
            o.name = name;
            o.partnerRegions = partnerRegions;
            o.readOnlyEndpoint = readOnlyEndpoint;
            o.readWriteEndpoint = readWriteEndpoint;
            o.replicationRole = replicationRole;
            o.replicationState = replicationState;
            o.type = type;
            return o;
        }
    }
}
