// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetManagedInstanceKeyResult {
    /**
     * @return Key auto rotation opt-in flag. Either true or false.
     * 
     */
    private Boolean autoRotationEnabled;
    /**
     * @return The key creation date.
     * 
     */
    private String creationDate;
    /**
     * @return Resource ID.
     * 
     */
    private String id;
    /**
     * @return Kind of encryption protector. This is metadata used for the Azure portal experience.
     * 
     */
    private String kind;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return Thumbprint of the key.
     * 
     */
    private String thumbprint;
    /**
     * @return Resource type.
     * 
     */
    private String type;

    private GetManagedInstanceKeyResult() {}
    /**
     * @return Key auto rotation opt-in flag. Either true or false.
     * 
     */
    public Boolean autoRotationEnabled() {
        return this.autoRotationEnabled;
    }
    /**
     * @return The key creation date.
     * 
     */
    public String creationDate() {
        return this.creationDate;
    }
    /**
     * @return Resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Kind of encryption protector. This is metadata used for the Azure portal experience.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Thumbprint of the key.
     * 
     */
    public String thumbprint() {
        return this.thumbprint;
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedInstanceKeyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean autoRotationEnabled;
        private String creationDate;
        private String id;
        private String kind;
        private String name;
        private String thumbprint;
        private String type;
        public Builder() {}
        public Builder(GetManagedInstanceKeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRotationEnabled = defaults.autoRotationEnabled;
    	      this.creationDate = defaults.creationDate;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.thumbprint = defaults.thumbprint;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder autoRotationEnabled(Boolean autoRotationEnabled) {
            this.autoRotationEnabled = Objects.requireNonNull(autoRotationEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder creationDate(String creationDate) {
            this.creationDate = Objects.requireNonNull(creationDate);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder thumbprint(String thumbprint) {
            this.thumbprint = Objects.requireNonNull(thumbprint);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetManagedInstanceKeyResult build() {
            final var o = new GetManagedInstanceKeyResult();
            o.autoRotationEnabled = autoRotationEnabled;
            o.creationDate = creationDate;
            o.id = id;
            o.kind = kind;
            o.name = name;
            o.thumbprint = thumbprint;
            o.type = type;
            return o;
        }
    }
}
