// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql.outputs;

import com.pulumi.azurenative.sql.outputs.ManagedInstanceExternalAdministratorResponse;
import com.pulumi.azurenative.sql.outputs.ManagedInstancePecPropertyResponse;
import com.pulumi.azurenative.sql.outputs.ResourceIdentityResponse;
import com.pulumi.azurenative.sql.outputs.SkuResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedInstanceResult {
    /**
     * @return Administrator username for the managed instance. Can only be specified when the managed instance is being created (and is required for creation).
     * 
     */
    private @Nullable String administratorLogin;
    /**
     * @return The Azure Active Directory administrator of the server.
     * 
     */
    private @Nullable ManagedInstanceExternalAdministratorResponse administrators;
    /**
     * @return Collation of the managed instance.
     * 
     */
    private @Nullable String collation;
    /**
     * @return The Dns Zone that the managed instance is in.
     * 
     */
    private String dnsZone;
    /**
     * @return The fully qualified domain name of the managed instance.
     * 
     */
    private String fullyQualifiedDomainName;
    /**
     * @return Resource ID.
     * 
     */
    private String id;
    /**
     * @return The Azure Active Directory identity of the managed instance.
     * 
     */
    private @Nullable ResourceIdentityResponse identity;
    /**
     * @return The Id of the instance pool this managed server belongs to.
     * 
     */
    private @Nullable String instancePoolId;
    /**
     * @return A CMK URI of the key to use for encryption.
     * 
     */
    private @Nullable String keyId;
    /**
     * @return The license type. Possible values are &#39;LicenseIncluded&#39; (regular price inclusive of a new SQL license) and &#39;BasePrice&#39; (discounted AHB price for bringing your own SQL licenses).
     * 
     */
    private @Nullable String licenseType;
    /**
     * @return Resource location.
     * 
     */
    private String location;
    /**
     * @return Specifies maintenance configuration id to apply to this managed instance.
     * 
     */
    private @Nullable String maintenanceConfigurationId;
    /**
     * @return Minimal TLS version. Allowed values: &#39;None&#39;, &#39;1.0&#39;, &#39;1.1&#39;, &#39;1.2&#39;
     * 
     */
    private @Nullable String minimalTlsVersion;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return The resource id of a user assigned identity to be used by default.
     * 
     */
    private @Nullable String primaryUserAssignedIdentityId;
    /**
     * @return List of private endpoint connections on a managed instance.
     * 
     */
    private List<ManagedInstancePecPropertyResponse> privateEndpointConnections;
    private String provisioningState;
    /**
     * @return Connection type used for connecting to the instance.
     * 
     */
    private @Nullable String proxyOverride;
    /**
     * @return Whether or not the public data endpoint is enabled.
     * 
     */
    private @Nullable Boolean publicDataEndpointEnabled;
    /**
     * @return Managed instance SKU. Allowed values for sku.name: GP_Gen4, GP_Gen5, BC_Gen4, BC_Gen5
     * 
     */
    private @Nullable SkuResponse sku;
    /**
     * @return The state of the managed instance.
     * 
     */
    private String state;
    /**
     * @return The storage account type used to store backups for this instance. The options are LRS (LocallyRedundantStorage), ZRS (ZoneRedundantStorage) and GRS (GeoRedundantStorage)
     * 
     */
    private @Nullable String storageAccountType;
    /**
     * @return Storage size in GB. Minimum value: 32. Maximum value: 8192. Increments of 32 GB allowed only.
     * 
     */
    private @Nullable Integer storageSizeInGB;
    /**
     * @return Subnet resource ID for the managed instance.
     * 
     */
    private @Nullable String subnetId;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Id of the timezone. Allowed values are timezones supported by Windows.
     * Windows keeps details on supported timezones, including the id, in registry under
     * KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones.
     * You can get those registry values via SQL Server by querying SELECT name AS timezone_id FROM sys.time_zone_info.
     * List of Ids can also be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
     * An example of valid timezone id is &#34;Pacific Standard Time&#34; or &#34;W. Europe Standard Time&#34;.
     * 
     */
    private @Nullable String timezoneId;
    /**
     * @return Resource type.
     * 
     */
    private String type;
    /**
     * @return The number of vCores. Allowed values: 8, 16, 24, 32, 40, 64, 80.
     * 
     */
    private @Nullable Integer vCores;
    /**
     * @return Whether or not the multi-az is enabled.
     * 
     */
    private @Nullable Boolean zoneRedundant;

    private GetManagedInstanceResult() {}
    /**
     * @return Administrator username for the managed instance. Can only be specified when the managed instance is being created (and is required for creation).
     * 
     */
    public Optional<String> administratorLogin() {
        return Optional.ofNullable(this.administratorLogin);
    }
    /**
     * @return The Azure Active Directory administrator of the server.
     * 
     */
    public Optional<ManagedInstanceExternalAdministratorResponse> administrators() {
        return Optional.ofNullable(this.administrators);
    }
    /**
     * @return Collation of the managed instance.
     * 
     */
    public Optional<String> collation() {
        return Optional.ofNullable(this.collation);
    }
    /**
     * @return The Dns Zone that the managed instance is in.
     * 
     */
    public String dnsZone() {
        return this.dnsZone;
    }
    /**
     * @return The fully qualified domain name of the managed instance.
     * 
     */
    public String fullyQualifiedDomainName() {
        return this.fullyQualifiedDomainName;
    }
    /**
     * @return Resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Azure Active Directory identity of the managed instance.
     * 
     */
    public Optional<ResourceIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return The Id of the instance pool this managed server belongs to.
     * 
     */
    public Optional<String> instancePoolId() {
        return Optional.ofNullable(this.instancePoolId);
    }
    /**
     * @return A CMK URI of the key to use for encryption.
     * 
     */
    public Optional<String> keyId() {
        return Optional.ofNullable(this.keyId);
    }
    /**
     * @return The license type. Possible values are &#39;LicenseIncluded&#39; (regular price inclusive of a new SQL license) and &#39;BasePrice&#39; (discounted AHB price for bringing your own SQL licenses).
     * 
     */
    public Optional<String> licenseType() {
        return Optional.ofNullable(this.licenseType);
    }
    /**
     * @return Resource location.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Specifies maintenance configuration id to apply to this managed instance.
     * 
     */
    public Optional<String> maintenanceConfigurationId() {
        return Optional.ofNullable(this.maintenanceConfigurationId);
    }
    /**
     * @return Minimal TLS version. Allowed values: &#39;None&#39;, &#39;1.0&#39;, &#39;1.1&#39;, &#39;1.2&#39;
     * 
     */
    public Optional<String> minimalTlsVersion() {
        return Optional.ofNullable(this.minimalTlsVersion);
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The resource id of a user assigned identity to be used by default.
     * 
     */
    public Optional<String> primaryUserAssignedIdentityId() {
        return Optional.ofNullable(this.primaryUserAssignedIdentityId);
    }
    /**
     * @return List of private endpoint connections on a managed instance.
     * 
     */
    public List<ManagedInstancePecPropertyResponse> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Connection type used for connecting to the instance.
     * 
     */
    public Optional<String> proxyOverride() {
        return Optional.ofNullable(this.proxyOverride);
    }
    /**
     * @return Whether or not the public data endpoint is enabled.
     * 
     */
    public Optional<Boolean> publicDataEndpointEnabled() {
        return Optional.ofNullable(this.publicDataEndpointEnabled);
    }
    /**
     * @return Managed instance SKU. Allowed values for sku.name: GP_Gen4, GP_Gen5, BC_Gen4, BC_Gen5
     * 
     */
    public Optional<SkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return The state of the managed instance.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The storage account type used to store backups for this instance. The options are LRS (LocallyRedundantStorage), ZRS (ZoneRedundantStorage) and GRS (GeoRedundantStorage)
     * 
     */
    public Optional<String> storageAccountType() {
        return Optional.ofNullable(this.storageAccountType);
    }
    /**
     * @return Storage size in GB. Minimum value: 32. Maximum value: 8192. Increments of 32 GB allowed only.
     * 
     */
    public Optional<Integer> storageSizeInGB() {
        return Optional.ofNullable(this.storageSizeInGB);
    }
    /**
     * @return Subnet resource ID for the managed instance.
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Id of the timezone. Allowed values are timezones supported by Windows.
     * Windows keeps details on supported timezones, including the id, in registry under
     * KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones.
     * You can get those registry values via SQL Server by querying SELECT name AS timezone_id FROM sys.time_zone_info.
     * List of Ids can also be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
     * An example of valid timezone id is &#34;Pacific Standard Time&#34; or &#34;W. Europe Standard Time&#34;.
     * 
     */
    public Optional<String> timezoneId() {
        return Optional.ofNullable(this.timezoneId);
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The number of vCores. Allowed values: 8, 16, 24, 32, 40, 64, 80.
     * 
     */
    public Optional<Integer> vCores() {
        return Optional.ofNullable(this.vCores);
    }
    /**
     * @return Whether or not the multi-az is enabled.
     * 
     */
    public Optional<Boolean> zoneRedundant() {
        return Optional.ofNullable(this.zoneRedundant);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String administratorLogin;
        private @Nullable ManagedInstanceExternalAdministratorResponse administrators;
        private @Nullable String collation;
        private String dnsZone;
        private String fullyQualifiedDomainName;
        private String id;
        private @Nullable ResourceIdentityResponse identity;
        private @Nullable String instancePoolId;
        private @Nullable String keyId;
        private @Nullable String licenseType;
        private String location;
        private @Nullable String maintenanceConfigurationId;
        private @Nullable String minimalTlsVersion;
        private String name;
        private @Nullable String primaryUserAssignedIdentityId;
        private List<ManagedInstancePecPropertyResponse> privateEndpointConnections;
        private String provisioningState;
        private @Nullable String proxyOverride;
        private @Nullable Boolean publicDataEndpointEnabled;
        private @Nullable SkuResponse sku;
        private String state;
        private @Nullable String storageAccountType;
        private @Nullable Integer storageSizeInGB;
        private @Nullable String subnetId;
        private @Nullable Map<String,String> tags;
        private @Nullable String timezoneId;
        private String type;
        private @Nullable Integer vCores;
        private @Nullable Boolean zoneRedundant;
        public Builder() {}
        public Builder(GetManagedInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.administratorLogin = defaults.administratorLogin;
    	      this.administrators = defaults.administrators;
    	      this.collation = defaults.collation;
    	      this.dnsZone = defaults.dnsZone;
    	      this.fullyQualifiedDomainName = defaults.fullyQualifiedDomainName;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.instancePoolId = defaults.instancePoolId;
    	      this.keyId = defaults.keyId;
    	      this.licenseType = defaults.licenseType;
    	      this.location = defaults.location;
    	      this.maintenanceConfigurationId = defaults.maintenanceConfigurationId;
    	      this.minimalTlsVersion = defaults.minimalTlsVersion;
    	      this.name = defaults.name;
    	      this.primaryUserAssignedIdentityId = defaults.primaryUserAssignedIdentityId;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.provisioningState = defaults.provisioningState;
    	      this.proxyOverride = defaults.proxyOverride;
    	      this.publicDataEndpointEnabled = defaults.publicDataEndpointEnabled;
    	      this.sku = defaults.sku;
    	      this.state = defaults.state;
    	      this.storageAccountType = defaults.storageAccountType;
    	      this.storageSizeInGB = defaults.storageSizeInGB;
    	      this.subnetId = defaults.subnetId;
    	      this.tags = defaults.tags;
    	      this.timezoneId = defaults.timezoneId;
    	      this.type = defaults.type;
    	      this.vCores = defaults.vCores;
    	      this.zoneRedundant = defaults.zoneRedundant;
        }

        @CustomType.Setter
        public Builder administratorLogin(@Nullable String administratorLogin) {
            this.administratorLogin = administratorLogin;
            return this;
        }
        @CustomType.Setter
        public Builder administrators(@Nullable ManagedInstanceExternalAdministratorResponse administrators) {
            this.administrators = administrators;
            return this;
        }
        @CustomType.Setter
        public Builder collation(@Nullable String collation) {
            this.collation = collation;
            return this;
        }
        @CustomType.Setter
        public Builder dnsZone(String dnsZone) {
            this.dnsZone = Objects.requireNonNull(dnsZone);
            return this;
        }
        @CustomType.Setter
        public Builder fullyQualifiedDomainName(String fullyQualifiedDomainName) {
            this.fullyQualifiedDomainName = Objects.requireNonNull(fullyQualifiedDomainName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identity(@Nullable ResourceIdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder instancePoolId(@Nullable String instancePoolId) {
            this.instancePoolId = instancePoolId;
            return this;
        }
        @CustomType.Setter
        public Builder keyId(@Nullable String keyId) {
            this.keyId = keyId;
            return this;
        }
        @CustomType.Setter
        public Builder licenseType(@Nullable String licenseType) {
            this.licenseType = licenseType;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceConfigurationId(@Nullable String maintenanceConfigurationId) {
            this.maintenanceConfigurationId = maintenanceConfigurationId;
            return this;
        }
        @CustomType.Setter
        public Builder minimalTlsVersion(@Nullable String minimalTlsVersion) {
            this.minimalTlsVersion = minimalTlsVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder primaryUserAssignedIdentityId(@Nullable String primaryUserAssignedIdentityId) {
            this.primaryUserAssignedIdentityId = primaryUserAssignedIdentityId;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointConnections(List<ManagedInstancePecPropertyResponse> privateEndpointConnections) {
            this.privateEndpointConnections = Objects.requireNonNull(privateEndpointConnections);
            return this;
        }
        public Builder privateEndpointConnections(ManagedInstancePecPropertyResponse... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder proxyOverride(@Nullable String proxyOverride) {
            this.proxyOverride = proxyOverride;
            return this;
        }
        @CustomType.Setter
        public Builder publicDataEndpointEnabled(@Nullable Boolean publicDataEndpointEnabled) {
            this.publicDataEndpointEnabled = publicDataEndpointEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder sku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder storageAccountType(@Nullable String storageAccountType) {
            this.storageAccountType = storageAccountType;
            return this;
        }
        @CustomType.Setter
        public Builder storageSizeInGB(@Nullable Integer storageSizeInGB) {
            this.storageSizeInGB = storageSizeInGB;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder timezoneId(@Nullable String timezoneId) {
            this.timezoneId = timezoneId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder vCores(@Nullable Integer vCores) {
            this.vCores = vCores;
            return this;
        }
        @CustomType.Setter
        public Builder zoneRedundant(@Nullable Boolean zoneRedundant) {
            this.zoneRedundant = zoneRedundant;
            return this;
        }
        public GetManagedInstanceResult build() {
            final var o = new GetManagedInstanceResult();
            o.administratorLogin = administratorLogin;
            o.administrators = administrators;
            o.collation = collation;
            o.dnsZone = dnsZone;
            o.fullyQualifiedDomainName = fullyQualifiedDomainName;
            o.id = id;
            o.identity = identity;
            o.instancePoolId = instancePoolId;
            o.keyId = keyId;
            o.licenseType = licenseType;
            o.location = location;
            o.maintenanceConfigurationId = maintenanceConfigurationId;
            o.minimalTlsVersion = minimalTlsVersion;
            o.name = name;
            o.primaryUserAssignedIdentityId = primaryUserAssignedIdentityId;
            o.privateEndpointConnections = privateEndpointConnections;
            o.provisioningState = provisioningState;
            o.proxyOverride = proxyOverride;
            o.publicDataEndpointEnabled = publicDataEndpointEnabled;
            o.sku = sku;
            o.state = state;
            o.storageAccountType = storageAccountType;
            o.storageSizeInGB = storageSizeInGB;
            o.subnetId = subnetId;
            o.tags = tags;
            o.timezoneId = timezoneId;
            o.type = type;
            o.vCores = vCores;
            o.zoneRedundant = zoneRedundant;
            return o;
        }
    }
}
