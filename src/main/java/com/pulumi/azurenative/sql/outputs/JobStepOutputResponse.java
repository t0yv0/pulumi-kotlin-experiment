// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobStepOutputResponse {
    /**
     * @return The resource ID of the credential to use to connect to the output destination.
     * 
     */
    private String credential;
    /**
     * @return The output destination database.
     * 
     */
    private String databaseName;
    /**
     * @return The output destination resource group.
     * 
     */
    private @Nullable String resourceGroupName;
    /**
     * @return The output destination schema.
     * 
     */
    private @Nullable String schemaName;
    /**
     * @return The output destination server name.
     * 
     */
    private String serverName;
    /**
     * @return The output destination subscription id.
     * 
     */
    private @Nullable String subscriptionId;
    /**
     * @return The output destination table.
     * 
     */
    private String tableName;
    /**
     * @return The output destination type.
     * 
     */
    private @Nullable String type;

    private JobStepOutputResponse() {}
    /**
     * @return The resource ID of the credential to use to connect to the output destination.
     * 
     */
    public String credential() {
        return this.credential;
    }
    /**
     * @return The output destination database.
     * 
     */
    public String databaseName() {
        return this.databaseName;
    }
    /**
     * @return The output destination resource group.
     * 
     */
    public Optional<String> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }
    /**
     * @return The output destination schema.
     * 
     */
    public Optional<String> schemaName() {
        return Optional.ofNullable(this.schemaName);
    }
    /**
     * @return The output destination server name.
     * 
     */
    public String serverName() {
        return this.serverName;
    }
    /**
     * @return The output destination subscription id.
     * 
     */
    public Optional<String> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }
    /**
     * @return The output destination table.
     * 
     */
    public String tableName() {
        return this.tableName;
    }
    /**
     * @return The output destination type.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobStepOutputResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String credential;
        private String databaseName;
        private @Nullable String resourceGroupName;
        private @Nullable String schemaName;
        private String serverName;
        private @Nullable String subscriptionId;
        private String tableName;
        private @Nullable String type;
        public Builder() {}
        public Builder(JobStepOutputResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credential = defaults.credential;
    	      this.databaseName = defaults.databaseName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.schemaName = defaults.schemaName;
    	      this.serverName = defaults.serverName;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.tableName = defaults.tableName;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder credential(String credential) {
            this.credential = Objects.requireNonNull(credential);
            return this;
        }
        @CustomType.Setter
        public Builder databaseName(String databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(@Nullable String resourceGroupName) {
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder schemaName(@Nullable String schemaName) {
            this.schemaName = schemaName;
            return this;
        }
        @CustomType.Setter
        public Builder serverName(String serverName) {
            this.serverName = Objects.requireNonNull(serverName);
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionId(@Nullable String subscriptionId) {
            this.subscriptionId = subscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder tableName(String tableName) {
            this.tableName = Objects.requireNonNull(tableName);
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public JobStepOutputResponse build() {
            final var o = new JobStepOutputResponse();
            o.credential = credential;
            o.databaseName = databaseName;
            o.resourceGroupName = resourceGroupName;
            o.schemaName = schemaName;
            o.serverName = serverName;
            o.subscriptionId = subscriptionId;
            o.tableName = tableName;
            o.type = type;
            return o;
        }
    }
}
