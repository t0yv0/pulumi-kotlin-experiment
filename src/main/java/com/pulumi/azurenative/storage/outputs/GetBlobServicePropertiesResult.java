// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.outputs;

import com.pulumi.azurenative.storage.outputs.ChangeFeedResponse;
import com.pulumi.azurenative.storage.outputs.CorsRulesResponse;
import com.pulumi.azurenative.storage.outputs.DeleteRetentionPolicyResponse;
import com.pulumi.azurenative.storage.outputs.LastAccessTimeTrackingPolicyResponse;
import com.pulumi.azurenative.storage.outputs.RestorePolicyPropertiesResponse;
import com.pulumi.azurenative.storage.outputs.SkuResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBlobServicePropertiesResult {
    /**
     * @return Deprecated in favor of isVersioningEnabled property.
     * 
     */
    private @Nullable Boolean automaticSnapshotPolicyEnabled;
    /**
     * @return The blob service properties for change feed events.
     * 
     */
    private @Nullable ChangeFeedResponse changeFeed;
    /**
     * @return The blob service properties for container soft delete.
     * 
     */
    private @Nullable DeleteRetentionPolicyResponse containerDeleteRetentionPolicy;
    /**
     * @return Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
     * 
     */
    private @Nullable CorsRulesResponse cors;
    /**
     * @return DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.
     * 
     */
    private @Nullable String defaultServiceVersion;
    /**
     * @return The blob service properties for blob soft delete.
     * 
     */
    private @Nullable DeleteRetentionPolicyResponse deleteRetentionPolicy;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return Versioning is enabled if set to true.
     * 
     */
    private @Nullable Boolean isVersioningEnabled;
    /**
     * @return The blob service property to configure last access time based tracking policy.
     * 
     */
    private @Nullable LastAccessTimeTrackingPolicyResponse lastAccessTimeTrackingPolicy;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return The blob service properties for blob restore policy.
     * 
     */
    private @Nullable RestorePolicyPropertiesResponse restorePolicy;
    /**
     * @return Sku name and tier.
     * 
     */
    private SkuResponse sku;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;

    private GetBlobServicePropertiesResult() {}
    /**
     * @return Deprecated in favor of isVersioningEnabled property.
     * 
     */
    public Optional<Boolean> automaticSnapshotPolicyEnabled() {
        return Optional.ofNullable(this.automaticSnapshotPolicyEnabled);
    }
    /**
     * @return The blob service properties for change feed events.
     * 
     */
    public Optional<ChangeFeedResponse> changeFeed() {
        return Optional.ofNullable(this.changeFeed);
    }
    /**
     * @return The blob service properties for container soft delete.
     * 
     */
    public Optional<DeleteRetentionPolicyResponse> containerDeleteRetentionPolicy() {
        return Optional.ofNullable(this.containerDeleteRetentionPolicy);
    }
    /**
     * @return Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
     * 
     */
    public Optional<CorsRulesResponse> cors() {
        return Optional.ofNullable(this.cors);
    }
    /**
     * @return DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.
     * 
     */
    public Optional<String> defaultServiceVersion() {
        return Optional.ofNullable(this.defaultServiceVersion);
    }
    /**
     * @return The blob service properties for blob soft delete.
     * 
     */
    public Optional<DeleteRetentionPolicyResponse> deleteRetentionPolicy() {
        return Optional.ofNullable(this.deleteRetentionPolicy);
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Versioning is enabled if set to true.
     * 
     */
    public Optional<Boolean> isVersioningEnabled() {
        return Optional.ofNullable(this.isVersioningEnabled);
    }
    /**
     * @return The blob service property to configure last access time based tracking policy.
     * 
     */
    public Optional<LastAccessTimeTrackingPolicyResponse> lastAccessTimeTrackingPolicy() {
        return Optional.ofNullable(this.lastAccessTimeTrackingPolicy);
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The blob service properties for blob restore policy.
     * 
     */
    public Optional<RestorePolicyPropertiesResponse> restorePolicy() {
        return Optional.ofNullable(this.restorePolicy);
    }
    /**
     * @return Sku name and tier.
     * 
     */
    public SkuResponse sku() {
        return this.sku;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBlobServicePropertiesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean automaticSnapshotPolicyEnabled;
        private @Nullable ChangeFeedResponse changeFeed;
        private @Nullable DeleteRetentionPolicyResponse containerDeleteRetentionPolicy;
        private @Nullable CorsRulesResponse cors;
        private @Nullable String defaultServiceVersion;
        private @Nullable DeleteRetentionPolicyResponse deleteRetentionPolicy;
        private String id;
        private @Nullable Boolean isVersioningEnabled;
        private @Nullable LastAccessTimeTrackingPolicyResponse lastAccessTimeTrackingPolicy;
        private String name;
        private @Nullable RestorePolicyPropertiesResponse restorePolicy;
        private SkuResponse sku;
        private String type;
        public Builder() {}
        public Builder(GetBlobServicePropertiesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automaticSnapshotPolicyEnabled = defaults.automaticSnapshotPolicyEnabled;
    	      this.changeFeed = defaults.changeFeed;
    	      this.containerDeleteRetentionPolicy = defaults.containerDeleteRetentionPolicy;
    	      this.cors = defaults.cors;
    	      this.defaultServiceVersion = defaults.defaultServiceVersion;
    	      this.deleteRetentionPolicy = defaults.deleteRetentionPolicy;
    	      this.id = defaults.id;
    	      this.isVersioningEnabled = defaults.isVersioningEnabled;
    	      this.lastAccessTimeTrackingPolicy = defaults.lastAccessTimeTrackingPolicy;
    	      this.name = defaults.name;
    	      this.restorePolicy = defaults.restorePolicy;
    	      this.sku = defaults.sku;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder automaticSnapshotPolicyEnabled(@Nullable Boolean automaticSnapshotPolicyEnabled) {
            this.automaticSnapshotPolicyEnabled = automaticSnapshotPolicyEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder changeFeed(@Nullable ChangeFeedResponse changeFeed) {
            this.changeFeed = changeFeed;
            return this;
        }
        @CustomType.Setter
        public Builder containerDeleteRetentionPolicy(@Nullable DeleteRetentionPolicyResponse containerDeleteRetentionPolicy) {
            this.containerDeleteRetentionPolicy = containerDeleteRetentionPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder cors(@Nullable CorsRulesResponse cors) {
            this.cors = cors;
            return this;
        }
        @CustomType.Setter
        public Builder defaultServiceVersion(@Nullable String defaultServiceVersion) {
            this.defaultServiceVersion = defaultServiceVersion;
            return this;
        }
        @CustomType.Setter
        public Builder deleteRetentionPolicy(@Nullable DeleteRetentionPolicyResponse deleteRetentionPolicy) {
            this.deleteRetentionPolicy = deleteRetentionPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isVersioningEnabled(@Nullable Boolean isVersioningEnabled) {
            this.isVersioningEnabled = isVersioningEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder lastAccessTimeTrackingPolicy(@Nullable LastAccessTimeTrackingPolicyResponse lastAccessTimeTrackingPolicy) {
            this.lastAccessTimeTrackingPolicy = lastAccessTimeTrackingPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder restorePolicy(@Nullable RestorePolicyPropertiesResponse restorePolicy) {
            this.restorePolicy = restorePolicy;
            return this;
        }
        @CustomType.Setter
        public Builder sku(SkuResponse sku) {
            this.sku = Objects.requireNonNull(sku);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetBlobServicePropertiesResult build() {
            final var o = new GetBlobServicePropertiesResult();
            o.automaticSnapshotPolicyEnabled = automaticSnapshotPolicyEnabled;
            o.changeFeed = changeFeed;
            o.containerDeleteRetentionPolicy = containerDeleteRetentionPolicy;
            o.cors = cors;
            o.defaultServiceVersion = defaultServiceVersion;
            o.deleteRetentionPolicy = deleteRetentionPolicy;
            o.id = id;
            o.isVersioningEnabled = isVersioningEnabled;
            o.lastAccessTimeTrackingPolicy = lastAccessTimeTrackingPolicy;
            o.name = name;
            o.restorePolicy = restorePolicy;
            o.sku = sku;
            o.type = type;
            return o;
        }
    }
}
