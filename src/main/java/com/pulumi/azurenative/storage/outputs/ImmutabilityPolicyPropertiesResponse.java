// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.outputs;

import com.pulumi.azurenative.storage.outputs.UpdateHistoryPropertyResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ImmutabilityPolicyPropertiesResponse {
    /**
     * @return This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API
     * 
     */
    private @Nullable Boolean allowProtectedAppendWrites;
    /**
     * @return ImmutabilityPolicy Etag.
     * 
     */
    private String etag;
    /**
     * @return The immutability period for the blobs in the container since the policy creation, in days.
     * 
     */
    private @Nullable Integer immutabilityPeriodSinceCreationInDays;
    /**
     * @return The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
     * 
     */
    private String state;
    /**
     * @return The ImmutabilityPolicy update history of the blob container.
     * 
     */
    private List<UpdateHistoryPropertyResponse> updateHistory;

    private ImmutabilityPolicyPropertiesResponse() {}
    /**
     * @return This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API
     * 
     */
    public Optional<Boolean> allowProtectedAppendWrites() {
        return Optional.ofNullable(this.allowProtectedAppendWrites);
    }
    /**
     * @return ImmutabilityPolicy Etag.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The immutability period for the blobs in the container since the policy creation, in days.
     * 
     */
    public Optional<Integer> immutabilityPeriodSinceCreationInDays() {
        return Optional.ofNullable(this.immutabilityPeriodSinceCreationInDays);
    }
    /**
     * @return The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The ImmutabilityPolicy update history of the blob container.
     * 
     */
    public List<UpdateHistoryPropertyResponse> updateHistory() {
        return this.updateHistory;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImmutabilityPolicyPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowProtectedAppendWrites;
        private String etag;
        private @Nullable Integer immutabilityPeriodSinceCreationInDays;
        private String state;
        private List<UpdateHistoryPropertyResponse> updateHistory;
        public Builder() {}
        public Builder(ImmutabilityPolicyPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowProtectedAppendWrites = defaults.allowProtectedAppendWrites;
    	      this.etag = defaults.etag;
    	      this.immutabilityPeriodSinceCreationInDays = defaults.immutabilityPeriodSinceCreationInDays;
    	      this.state = defaults.state;
    	      this.updateHistory = defaults.updateHistory;
        }

        @CustomType.Setter
        public Builder allowProtectedAppendWrites(@Nullable Boolean allowProtectedAppendWrites) {
            this.allowProtectedAppendWrites = allowProtectedAppendWrites;
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder immutabilityPeriodSinceCreationInDays(@Nullable Integer immutabilityPeriodSinceCreationInDays) {
            this.immutabilityPeriodSinceCreationInDays = immutabilityPeriodSinceCreationInDays;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder updateHistory(List<UpdateHistoryPropertyResponse> updateHistory) {
            this.updateHistory = Objects.requireNonNull(updateHistory);
            return this;
        }
        public Builder updateHistory(UpdateHistoryPropertyResponse... updateHistory) {
            return updateHistory(List.of(updateHistory));
        }
        public ImmutabilityPolicyPropertiesResponse build() {
            final var o = new ImmutabilityPolicyPropertiesResponse();
            o.allowProtectedAppendWrites = allowProtectedAppendWrites;
            o.etag = etag;
            o.immutabilityPeriodSinceCreationInDays = immutabilityPeriodSinceCreationInDays;
            o.state = state;
            o.updateHistory = updateHistory;
            return o;
        }
    }
}
