// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.outputs;

import com.pulumi.azurenative.storage.outputs.SshPublicKeyResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ListLocalUserKeysResult {
    /**
     * @return Auto generated by the server for SMB authentication.
     * 
     */
    private String sharedKey;
    /**
     * @return Optional, local user ssh authorized keys for SFTP.
     * 
     */
    private @Nullable List<SshPublicKeyResponse> sshAuthorizedKeys;

    private ListLocalUserKeysResult() {}
    /**
     * @return Auto generated by the server for SMB authentication.
     * 
     */
    public String sharedKey() {
        return this.sharedKey;
    }
    /**
     * @return Optional, local user ssh authorized keys for SFTP.
     * 
     */
    public List<SshPublicKeyResponse> sshAuthorizedKeys() {
        return this.sshAuthorizedKeys == null ? List.of() : this.sshAuthorizedKeys;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListLocalUserKeysResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String sharedKey;
        private @Nullable List<SshPublicKeyResponse> sshAuthorizedKeys;
        public Builder() {}
        public Builder(ListLocalUserKeysResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sharedKey = defaults.sharedKey;
    	      this.sshAuthorizedKeys = defaults.sshAuthorizedKeys;
        }

        @CustomType.Setter
        public Builder sharedKey(String sharedKey) {
            this.sharedKey = Objects.requireNonNull(sharedKey);
            return this;
        }
        @CustomType.Setter
        public Builder sshAuthorizedKeys(@Nullable List<SshPublicKeyResponse> sshAuthorizedKeys) {
            this.sshAuthorizedKeys = sshAuthorizedKeys;
            return this;
        }
        public Builder sshAuthorizedKeys(SshPublicKeyResponse... sshAuthorizedKeys) {
            return sshAuthorizedKeys(List.of(sshAuthorizedKeys));
        }
        public ListLocalUserKeysResult build() {
            final var o = new ListLocalUserKeysResult();
            o.sharedKey = sharedKey;
            o.sshAuthorizedKeys = sshAuthorizedKeys;
            return o;
        }
    }
}
