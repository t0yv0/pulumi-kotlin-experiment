// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.outputs;

import com.pulumi.azurenative.storage.outputs.DateAfterModificationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ManagementPolicyBaseBlobResponse {
    /**
     * @return The function to delete the blob
     * 
     */
    private @Nullable DateAfterModificationResponse delete;
    /**
     * @return This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.
     * 
     */
    private @Nullable Boolean enableAutoTierToHotFromCool;
    /**
     * @return The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
     * 
     */
    private @Nullable DateAfterModificationResponse tierToArchive;
    /**
     * @return The function to tier blobs to cool storage. Support blobs currently at Hot tier
     * 
     */
    private @Nullable DateAfterModificationResponse tierToCool;

    private ManagementPolicyBaseBlobResponse() {}
    /**
     * @return The function to delete the blob
     * 
     */
    public Optional<DateAfterModificationResponse> delete() {
        return Optional.ofNullable(this.delete);
    }
    /**
     * @return This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.
     * 
     */
    public Optional<Boolean> enableAutoTierToHotFromCool() {
        return Optional.ofNullable(this.enableAutoTierToHotFromCool);
    }
    /**
     * @return The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
     * 
     */
    public Optional<DateAfterModificationResponse> tierToArchive() {
        return Optional.ofNullable(this.tierToArchive);
    }
    /**
     * @return The function to tier blobs to cool storage. Support blobs currently at Hot tier
     * 
     */
    public Optional<DateAfterModificationResponse> tierToCool() {
        return Optional.ofNullable(this.tierToCool);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagementPolicyBaseBlobResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DateAfterModificationResponse delete;
        private @Nullable Boolean enableAutoTierToHotFromCool;
        private @Nullable DateAfterModificationResponse tierToArchive;
        private @Nullable DateAfterModificationResponse tierToCool;
        public Builder() {}
        public Builder(ManagementPolicyBaseBlobResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.delete = defaults.delete;
    	      this.enableAutoTierToHotFromCool = defaults.enableAutoTierToHotFromCool;
    	      this.tierToArchive = defaults.tierToArchive;
    	      this.tierToCool = defaults.tierToCool;
        }

        @CustomType.Setter
        public Builder delete(@Nullable DateAfterModificationResponse delete) {
            this.delete = delete;
            return this;
        }
        @CustomType.Setter
        public Builder enableAutoTierToHotFromCool(@Nullable Boolean enableAutoTierToHotFromCool) {
            this.enableAutoTierToHotFromCool = enableAutoTierToHotFromCool;
            return this;
        }
        @CustomType.Setter
        public Builder tierToArchive(@Nullable DateAfterModificationResponse tierToArchive) {
            this.tierToArchive = tierToArchive;
            return this;
        }
        @CustomType.Setter
        public Builder tierToCool(@Nullable DateAfterModificationResponse tierToCool) {
            this.tierToCool = tierToCool;
            return this;
        }
        public ManagementPolicyBaseBlobResponse build() {
            final var o = new ManagementPolicyBaseBlobResponse();
            o.delete = delete;
            o.enableAutoTierToHotFromCool = enableAutoTierToHotFromCool;
            o.tierToArchive = tierToArchive;
            o.tierToCool = tierToCool;
            return o;
        }
    }
}
