// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.outputs;

import com.pulumi.azurenative.storage.outputs.IPRuleResponse;
import com.pulumi.azurenative.storage.outputs.ResourceAccessRuleResponse;
import com.pulumi.azurenative.storage.outputs.VirtualNetworkRuleResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NetworkRuleSetResponse {
    /**
     * @return Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, &#34;Logging, Metrics&#34;), or None to bypass none of those traffics.
     * 
     */
    private @Nullable String bypass;
    /**
     * @return Specifies the default action of allow or deny when no other rules match.
     * 
     */
    private String defaultAction;
    /**
     * @return Sets the IP ACL rules
     * 
     */
    private @Nullable List<IPRuleResponse> ipRules;
    /**
     * @return Sets the resource access rules
     * 
     */
    private @Nullable List<ResourceAccessRuleResponse> resourceAccessRules;
    /**
     * @return Sets the virtual network rules
     * 
     */
    private @Nullable List<VirtualNetworkRuleResponse> virtualNetworkRules;

    private NetworkRuleSetResponse() {}
    /**
     * @return Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, &#34;Logging, Metrics&#34;), or None to bypass none of those traffics.
     * 
     */
    public Optional<String> bypass() {
        return Optional.ofNullable(this.bypass);
    }
    /**
     * @return Specifies the default action of allow or deny when no other rules match.
     * 
     */
    public String defaultAction() {
        return this.defaultAction;
    }
    /**
     * @return Sets the IP ACL rules
     * 
     */
    public List<IPRuleResponse> ipRules() {
        return this.ipRules == null ? List.of() : this.ipRules;
    }
    /**
     * @return Sets the resource access rules
     * 
     */
    public List<ResourceAccessRuleResponse> resourceAccessRules() {
        return this.resourceAccessRules == null ? List.of() : this.resourceAccessRules;
    }
    /**
     * @return Sets the virtual network rules
     * 
     */
    public List<VirtualNetworkRuleResponse> virtualNetworkRules() {
        return this.virtualNetworkRules == null ? List.of() : this.virtualNetworkRules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkRuleSetResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bypass;
        private String defaultAction;
        private @Nullable List<IPRuleResponse> ipRules;
        private @Nullable List<ResourceAccessRuleResponse> resourceAccessRules;
        private @Nullable List<VirtualNetworkRuleResponse> virtualNetworkRules;
        public Builder() {}
        public Builder(NetworkRuleSetResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bypass = defaults.bypass;
    	      this.defaultAction = defaults.defaultAction;
    	      this.ipRules = defaults.ipRules;
    	      this.resourceAccessRules = defaults.resourceAccessRules;
    	      this.virtualNetworkRules = defaults.virtualNetworkRules;
        }

        @CustomType.Setter
        public Builder bypass(@Nullable String bypass) {
            this.bypass = bypass;
            return this;
        }
        @CustomType.Setter
        public Builder defaultAction(String defaultAction) {
            this.defaultAction = Objects.requireNonNull(defaultAction);
            return this;
        }
        @CustomType.Setter
        public Builder ipRules(@Nullable List<IPRuleResponse> ipRules) {
            this.ipRules = ipRules;
            return this;
        }
        public Builder ipRules(IPRuleResponse... ipRules) {
            return ipRules(List.of(ipRules));
        }
        @CustomType.Setter
        public Builder resourceAccessRules(@Nullable List<ResourceAccessRuleResponse> resourceAccessRules) {
            this.resourceAccessRules = resourceAccessRules;
            return this;
        }
        public Builder resourceAccessRules(ResourceAccessRuleResponse... resourceAccessRules) {
            return resourceAccessRules(List.of(resourceAccessRules));
        }
        @CustomType.Setter
        public Builder virtualNetworkRules(@Nullable List<VirtualNetworkRuleResponse> virtualNetworkRules) {
            this.virtualNetworkRules = virtualNetworkRules;
            return this;
        }
        public Builder virtualNetworkRules(VirtualNetworkRuleResponse... virtualNetworkRules) {
            return virtualNetworkRules(List.of(virtualNetworkRules));
        }
        public NetworkRuleSetResponse build() {
            final var o = new NetworkRuleSetResponse();
            o.bypass = bypass;
            o.defaultAction = defaultAction;
            o.ipRules = ipRules;
            o.resourceAccessRules = resourceAccessRules;
            o.virtualNetworkRules = virtualNetworkRules;
            return o;
        }
    }
}
