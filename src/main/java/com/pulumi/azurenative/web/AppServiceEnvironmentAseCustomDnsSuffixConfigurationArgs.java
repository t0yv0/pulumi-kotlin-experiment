// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppServiceEnvironmentAseCustomDnsSuffixConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppServiceEnvironmentAseCustomDnsSuffixConfigurationArgs Empty = new AppServiceEnvironmentAseCustomDnsSuffixConfigurationArgs();

    /**
     * The URL referencing the Azure Key Vault certificate secret that should be used as the default SSL/TLS certificate for sites with the custom domain suffix.
     * 
     */
    @Import(name="certificateUrl")
    private @Nullable Output<String> certificateUrl;

    /**
     * @return The URL referencing the Azure Key Vault certificate secret that should be used as the default SSL/TLS certificate for sites with the custom domain suffix.
     * 
     */
    public Optional<Output<String>> certificateUrl() {
        return Optional.ofNullable(this.certificateUrl);
    }

    /**
     * The default custom domain suffix to use for all sites deployed on the ASE.
     * 
     */
    @Import(name="dnsSuffix")
    private @Nullable Output<String> dnsSuffix;

    /**
     * @return The default custom domain suffix to use for all sites deployed on the ASE.
     * 
     */
    public Optional<Output<String>> dnsSuffix() {
        return Optional.ofNullable(this.dnsSuffix);
    }

    /**
     * The user-assigned identity to use for resolving the key vault certificate reference. If not specified, the system-assigned ASE identity will be used if available.
     * 
     */
    @Import(name="keyVaultReferenceIdentity")
    private @Nullable Output<String> keyVaultReferenceIdentity;

    /**
     * @return The user-assigned identity to use for resolving the key vault certificate reference. If not specified, the system-assigned ASE identity will be used if available.
     * 
     */
    public Optional<Output<String>> keyVaultReferenceIdentity() {
        return Optional.ofNullable(this.keyVaultReferenceIdentity);
    }

    /**
     * Kind of resource.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return Kind of resource.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Name of the App Service Environment.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the App Service Environment.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Name of the resource group to which the resource belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group to which the resource belongs.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private AppServiceEnvironmentAseCustomDnsSuffixConfigurationArgs() {}

    private AppServiceEnvironmentAseCustomDnsSuffixConfigurationArgs(AppServiceEnvironmentAseCustomDnsSuffixConfigurationArgs $) {
        this.certificateUrl = $.certificateUrl;
        this.dnsSuffix = $.dnsSuffix;
        this.keyVaultReferenceIdentity = $.keyVaultReferenceIdentity;
        this.kind = $.kind;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppServiceEnvironmentAseCustomDnsSuffixConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppServiceEnvironmentAseCustomDnsSuffixConfigurationArgs $;

        public Builder() {
            $ = new AppServiceEnvironmentAseCustomDnsSuffixConfigurationArgs();
        }

        public Builder(AppServiceEnvironmentAseCustomDnsSuffixConfigurationArgs defaults) {
            $ = new AppServiceEnvironmentAseCustomDnsSuffixConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateUrl The URL referencing the Azure Key Vault certificate secret that should be used as the default SSL/TLS certificate for sites with the custom domain suffix.
         * 
         * @return builder
         * 
         */
        public Builder certificateUrl(@Nullable Output<String> certificateUrl) {
            $.certificateUrl = certificateUrl;
            return this;
        }

        /**
         * @param certificateUrl The URL referencing the Azure Key Vault certificate secret that should be used as the default SSL/TLS certificate for sites with the custom domain suffix.
         * 
         * @return builder
         * 
         */
        public Builder certificateUrl(String certificateUrl) {
            return certificateUrl(Output.of(certificateUrl));
        }

        /**
         * @param dnsSuffix The default custom domain suffix to use for all sites deployed on the ASE.
         * 
         * @return builder
         * 
         */
        public Builder dnsSuffix(@Nullable Output<String> dnsSuffix) {
            $.dnsSuffix = dnsSuffix;
            return this;
        }

        /**
         * @param dnsSuffix The default custom domain suffix to use for all sites deployed on the ASE.
         * 
         * @return builder
         * 
         */
        public Builder dnsSuffix(String dnsSuffix) {
            return dnsSuffix(Output.of(dnsSuffix));
        }

        /**
         * @param keyVaultReferenceIdentity The user-assigned identity to use for resolving the key vault certificate reference. If not specified, the system-assigned ASE identity will be used if available.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultReferenceIdentity(@Nullable Output<String> keyVaultReferenceIdentity) {
            $.keyVaultReferenceIdentity = keyVaultReferenceIdentity;
            return this;
        }

        /**
         * @param keyVaultReferenceIdentity The user-assigned identity to use for resolving the key vault certificate reference. If not specified, the system-assigned ASE identity will be used if available.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultReferenceIdentity(String keyVaultReferenceIdentity) {
            return keyVaultReferenceIdentity(Output.of(keyVaultReferenceIdentity));
        }

        /**
         * @param kind Kind of resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Kind of resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param name Name of the App Service Environment.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the App Service Environment.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName Name of the resource group to which the resource belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group to which the resource belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public AppServiceEnvironmentAseCustomDnsSuffixConfigurationArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
