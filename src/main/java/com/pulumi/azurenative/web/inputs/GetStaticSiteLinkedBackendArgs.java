// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetStaticSiteLinkedBackendArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetStaticSiteLinkedBackendArgs Empty = new GetStaticSiteLinkedBackendArgs();

    /**
     * Name of the linked backend that should be retrieved
     * 
     */
    @Import(name="linkedBackendName", required=true)
    private Output<String> linkedBackendName;

    /**
     * @return Name of the linked backend that should be retrieved
     * 
     */
    public Output<String> linkedBackendName() {
        return this.linkedBackendName;
    }

    /**
     * Name of the static site
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the static site
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Name of the resource group to which the resource belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group to which the resource belongs.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetStaticSiteLinkedBackendArgs() {}

    private GetStaticSiteLinkedBackendArgs(GetStaticSiteLinkedBackendArgs $) {
        this.linkedBackendName = $.linkedBackendName;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStaticSiteLinkedBackendArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStaticSiteLinkedBackendArgs $;

        public Builder() {
            $ = new GetStaticSiteLinkedBackendArgs();
        }

        public Builder(GetStaticSiteLinkedBackendArgs defaults) {
            $ = new GetStaticSiteLinkedBackendArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param linkedBackendName Name of the linked backend that should be retrieved
         * 
         * @return builder
         * 
         */
        public Builder linkedBackendName(Output<String> linkedBackendName) {
            $.linkedBackendName = linkedBackendName;
            return this;
        }

        /**
         * @param linkedBackendName Name of the linked backend that should be retrieved
         * 
         * @return builder
         * 
         */
        public Builder linkedBackendName(String linkedBackendName) {
            return linkedBackendName(Output.of(linkedBackendName));
        }

        /**
         * @param name Name of the static site
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the static site
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName Name of the resource group to which the resource belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group to which the resource belongs.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetStaticSiteLinkedBackendArgs build() {
            $.linkedBackendName = Objects.requireNonNull($.linkedBackendName, "expected parameter 'linkedBackendName' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
