// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.outputs;

import com.pulumi.azurenative.web.outputs.GitHubActionConfigurationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWebAppSourceControlResult {
    /**
     * @return Name of branch to use for deployment.
     * 
     */
    private @Nullable String branch;
    /**
     * @return &lt;code&gt;true&lt;/code&gt; to enable deployment rollback; otherwise, &lt;code&gt;false&lt;/code&gt;.
     * 
     */
    private @Nullable Boolean deploymentRollbackEnabled;
    /**
     * @return If GitHub Action is selected, than the associated configuration.
     * 
     */
    private @Nullable GitHubActionConfigurationResponse gitHubActionConfiguration;
    /**
     * @return Resource Id.
     * 
     */
    private String id;
    /**
     * @return &lt;code&gt;true&lt;/code&gt; if this is deployed via GitHub action.
     * 
     */
    private @Nullable Boolean isGitHubAction;
    /**
     * @return &lt;code&gt;true&lt;/code&gt; to limit to manual integration; &lt;code&gt;false&lt;/code&gt; to enable continuous integration (which configures webhooks into online repos like GitHub).
     * 
     */
    private @Nullable Boolean isManualIntegration;
    /**
     * @return &lt;code&gt;true&lt;/code&gt; for a Mercurial repository; &lt;code&gt;false&lt;/code&gt; for a Git repository.
     * 
     */
    private @Nullable Boolean isMercurial;
    /**
     * @return Kind of resource.
     * 
     */
    private @Nullable String kind;
    /**
     * @return Resource Name.
     * 
     */
    private String name;
    /**
     * @return Repository or source control URL.
     * 
     */
    private @Nullable String repoUrl;
    /**
     * @return Resource type.
     * 
     */
    private String type;

    private GetWebAppSourceControlResult() {}
    /**
     * @return Name of branch to use for deployment.
     * 
     */
    public Optional<String> branch() {
        return Optional.ofNullable(this.branch);
    }
    /**
     * @return &lt;code&gt;true&lt;/code&gt; to enable deployment rollback; otherwise, &lt;code&gt;false&lt;/code&gt;.
     * 
     */
    public Optional<Boolean> deploymentRollbackEnabled() {
        return Optional.ofNullable(this.deploymentRollbackEnabled);
    }
    /**
     * @return If GitHub Action is selected, than the associated configuration.
     * 
     */
    public Optional<GitHubActionConfigurationResponse> gitHubActionConfiguration() {
        return Optional.ofNullable(this.gitHubActionConfiguration);
    }
    /**
     * @return Resource Id.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return &lt;code&gt;true&lt;/code&gt; if this is deployed via GitHub action.
     * 
     */
    public Optional<Boolean> isGitHubAction() {
        return Optional.ofNullable(this.isGitHubAction);
    }
    /**
     * @return &lt;code&gt;true&lt;/code&gt; to limit to manual integration; &lt;code&gt;false&lt;/code&gt; to enable continuous integration (which configures webhooks into online repos like GitHub).
     * 
     */
    public Optional<Boolean> isManualIntegration() {
        return Optional.ofNullable(this.isManualIntegration);
    }
    /**
     * @return &lt;code&gt;true&lt;/code&gt; for a Mercurial repository; &lt;code&gt;false&lt;/code&gt; for a Git repository.
     * 
     */
    public Optional<Boolean> isMercurial() {
        return Optional.ofNullable(this.isMercurial);
    }
    /**
     * @return Kind of resource.
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * @return Resource Name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Repository or source control URL.
     * 
     */
    public Optional<String> repoUrl() {
        return Optional.ofNullable(this.repoUrl);
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWebAppSourceControlResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String branch;
        private @Nullable Boolean deploymentRollbackEnabled;
        private @Nullable GitHubActionConfigurationResponse gitHubActionConfiguration;
        private String id;
        private @Nullable Boolean isGitHubAction;
        private @Nullable Boolean isManualIntegration;
        private @Nullable Boolean isMercurial;
        private @Nullable String kind;
        private String name;
        private @Nullable String repoUrl;
        private String type;
        public Builder() {}
        public Builder(GetWebAppSourceControlResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branch = defaults.branch;
    	      this.deploymentRollbackEnabled = defaults.deploymentRollbackEnabled;
    	      this.gitHubActionConfiguration = defaults.gitHubActionConfiguration;
    	      this.id = defaults.id;
    	      this.isGitHubAction = defaults.isGitHubAction;
    	      this.isManualIntegration = defaults.isManualIntegration;
    	      this.isMercurial = defaults.isMercurial;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.repoUrl = defaults.repoUrl;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder branch(@Nullable String branch) {
            this.branch = branch;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentRollbackEnabled(@Nullable Boolean deploymentRollbackEnabled) {
            this.deploymentRollbackEnabled = deploymentRollbackEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder gitHubActionConfiguration(@Nullable GitHubActionConfigurationResponse gitHubActionConfiguration) {
            this.gitHubActionConfiguration = gitHubActionConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isGitHubAction(@Nullable Boolean isGitHubAction) {
            this.isGitHubAction = isGitHubAction;
            return this;
        }
        @CustomType.Setter
        public Builder isManualIntegration(@Nullable Boolean isManualIntegration) {
            this.isManualIntegration = isManualIntegration;
            return this;
        }
        @CustomType.Setter
        public Builder isMercurial(@Nullable Boolean isMercurial) {
            this.isMercurial = isMercurial;
            return this;
        }
        @CustomType.Setter
        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder repoUrl(@Nullable String repoUrl) {
            this.repoUrl = repoUrl;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetWebAppSourceControlResult build() {
            final var o = new GetWebAppSourceControlResult();
            o.branch = branch;
            o.deploymentRollbackEnabled = deploymentRollbackEnabled;
            o.gitHubActionConfiguration = gitHubActionConfiguration;
            o.id = id;
            o.isGitHubAction = isGitHubAction;
            o.isManualIntegration = isManualIntegration;
            o.isMercurial = isMercurial;
            o.kind = kind;
            o.name = name;
            o.repoUrl = repoUrl;
            o.type = type;
            return o;
        }
    }
}
