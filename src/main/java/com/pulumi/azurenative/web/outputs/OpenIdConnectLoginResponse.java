// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.web.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OpenIdConnectLoginResponse {
    /**
     * @return The name of the claim that contains the users name.
     * 
     */
    private @Nullable String nameClaimType;
    /**
     * @return A list of the scopes that should be requested while authenticating.
     * 
     */
    private @Nullable List<String> scopes;

    private OpenIdConnectLoginResponse() {}
    /**
     * @return The name of the claim that contains the users name.
     * 
     */
    public Optional<String> nameClaimType() {
        return Optional.ofNullable(this.nameClaimType);
    }
    /**
     * @return A list of the scopes that should be requested while authenticating.
     * 
     */
    public List<String> scopes() {
        return this.scopes == null ? List.of() : this.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OpenIdConnectLoginResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String nameClaimType;
        private @Nullable List<String> scopes;
        public Builder() {}
        public Builder(OpenIdConnectLoginResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nameClaimType = defaults.nameClaimType;
    	      this.scopes = defaults.scopes;
        }

        @CustomType.Setter
        public Builder nameClaimType(@Nullable String nameClaimType) {
            this.nameClaimType = nameClaimType;
            return this;
        }
        @CustomType.Setter
        public Builder scopes(@Nullable List<String> scopes) {
            this.scopes = scopes;
            return this;
        }
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }
        public OpenIdConnectLoginResponse build() {
            final var o = new OpenIdConnectLoginResponse();
            o.nameClaimType = nameClaimType;
            o.scopes = scopes;
            return o;
        }
    }
}
