// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storage.inputs

import com.pulumi.azurenative.storage.enums.SkuName
import com.pulumi.core.annotations.Import
import com.pulumi.resources.ResourceArgs


object SkuArgs {

    data class T(
        @Import(name = "name", required = true)
        val name: SkuName
    ) : ResourceArgs()


    class Builder(val t: T) {
        fun build(): T {
            return t
        }

        fun name(skuName: SkuName): Builder {
            return Builder(t.copy(name = skuName))
        }
    }

    fun builder(): Builder {
        return Builder(T(name = null!!))
    }

    //public final SkuArgs Empty = new SkuArgs();


/*

    private Output<Either<String,SkuName>> name;

    public Output<Either<String,SkuName>> name() {
        return this.name;
    }

    private SkuArgs() {}

    private SkuArgs(SkuArgs $) {
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SkuArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SkuArgs $;

        public Builder() {
            $ = new SkuArgs();
        }

        public Builder(SkuArgs defaults) {
            $ = new SkuArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(Output<Either<String,SkuName>> name) {
            $.name = name;
            return this;
        }

        public Builder name(Either<String,SkuName> name) {
            return name(Output.of(name));
        }

        public Builder name(String name) {
            return name(Either.ofLeft(name));
        }

        public Builder name(SkuName name) {
            return name(Either.ofRight(name));
        }

        public SkuArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }
*/
}
